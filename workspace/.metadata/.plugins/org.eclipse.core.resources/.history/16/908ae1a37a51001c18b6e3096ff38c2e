<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
		spring bean configuration file
		: 안녕 난 bean을 만드는 XML이야
	 -->
	 
	 <!--
	 	1. 디폴트 생성자 + setter
	 		: setter injection 방식
	 -->
	 <!-- 
 	 	기본적으로 singleTon으로 생성 된다.	==> 작업 하지 않아도 알아서 싱글톤으로 생성 된다
	 
	 	 1) 디폴트 생성자
	 	 <bean id="객체명" class="클래스명"></bean>
	 	 <bean id="객체명" class="클래스명" />			// 클래스명 작성한 뒤 ctrl space 하면 package명이 자동으로 들어감
	 	 2) setter
	 	 <property name="필드명">
	 	 	<value>값</value>
	 	 </property>
	 	 <property name="필드명">
	 	 	<ref bean="객체명" />    // 참조하는 객체명, 스스로 닫는 테그로 마무리
	 	 </property>
	  -->
	
	<!-- 
		지금부터
		Calculator calculator1 = new Calculator();
	 -->							
	 <bean id="calculator1" class="com.koreait.ex01.bean01.Calculator">
	 </bean>
	<!-- 
		지금부터 아래 Bean을 생성한다.
		EngineerCalculator eCalculator1 = new EngineerCalculator();
		eCalculator1.setA(7);
		eCalculator1.setB(2);
		eCalculator1.setCalculator(calculator1);
	 -->
	 <!--  
	  -->
	<bean id="eCalculator1" class="com.koreait.ex01.bean01.EngineerCalculator">
		<property name="a">
			<value>7</value>
		</property>
		<property name="b">
			<value>3</value>
		</property>
		<property name="calculator">
			<ref bean="calculator1" />
		</property>
	</bean>	 
	
	<!-- 
		다음 Bean을 생성해 본다.
		Calculator calculator2 = new Calculator();
		EngineerCalculator eCalculator2 = new EngineerCalculator();
		eCalculator2.setA(12);
		eCalculator2.setB(7);
		eCalculator2.setCalculator(calculator2);
	 -->
	<bean id="calculator2" class="com.koreait.ex01.bean01.Calculator" />
	<!-- bean 하나를 만들고 property 세개를 만들기 -->
	<bean id="eCalculator2" class="com.koreait.ex01.bean01.EngineerCalculator">
		<property name="calculator" ref="calculator2"/>	<!-- property 태그 안에 속성을 지정 했음 -->	
		<property name="a" value="12"/>
		<property name="b" value="7"/>
	</bean>
	
	
	<!--  생성자 : constructor
		2. 필드 값을 받아오는 생성자
			: constructor injection 방식
	 -->
	 <!-- 
	 	<bean class="클래스명" id="객체명">
	 		<constructor-arg>
	 			<value>1 번째 인수</value> 순서대로 넣어야 함
	 		</constructor-arg>
	 		<constructor-arg>
	 			<value>2 번째 인수</value> 순서대로 넣어야 함
	 		</constructor-arg>
	 		<constructor-arg>
	 			<ref bean="3번째 인수는 객체명"/>
	 		</constructor-arg>
	 	</bean>
	  -->
	  <!-- 
	  		Calculator calculator3 = new Calculator();
	  		EngineerCalculator eCalculator3 = new EngineerCalculator(25, 12, calculator3)
	   -->
	  <bean class="com.koreait.ex01.bean01.Calculator" id="calculator3"/>
	  <bean class="com.koreait.ex01.bean01.EngineerCalculator" id="eCalculator3">
	  	<constructor-arg>
	  		<value>25</value>
	  	</constructor-arg>
	  	<constructor-arg>
	  		<value>12</value>
	  	</constructor-arg>
	  	<constructor-arg>
	  		<ref bean="calculator3"/>
	  	</constructor-arg>
	  </bean>
	  
	  
	  
	  
	  
	  	 
</beans>