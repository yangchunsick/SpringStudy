<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 
		servlet-content.xml
		안녕 난 DispatherServlet이야
		<bean> 등록도 할 수 있어
	 -->
	 
	 <!-- 
	 	DispatherServlet
	 	1. User <-> DispatherServlet <-> Controller
	 	2. Web 자원(image, css, js) - static 자원의 관리
	 	3. ViewResolver 동작
	  -->

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" /> <!-- web 자원은 resources 디렉터리에 보관 -->
	<resources mapping="/assets/**" location="/assets/"/> <!-- 추가도 할 수 있다 ! -->
	
	<!--
		Controller에서 view로 이동할 때 참고하는 속성들
		1. prefix : 반환하는 View 앞에 추가
		2. suffix : 반환하는 View 뒤에 추가
	-->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />	<!-- WEB-INF/views 밑에 있는 넘들 -->
		<beans:property name="suffix" value=".jsp" />				<!--  .jsp가 들어 갈 것임 -->
	</beans:bean>
	
	<context:component-scan base-package="com.koreait.ex02" />
	
	
	
</beans:beans>
